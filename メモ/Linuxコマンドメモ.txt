※※ Linux ※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※
chmod
chown
ssh
ssh [hostName]
------------------------------
すべてのファイルを移動
find . -type f | xargs -i mv {} ../20151212/
------------------------------
※デプロイ方法※
デプロイ sudo sh /root/applog/deploy/do.sh
------------------------------
シェルのプロセスチェック
ps -ax | grep repair.sh
ps aux | grep CreateApplog4kBoxLog

キル
kill プロセスID
それでも死ななければ
kill -KILL プロセスID

名前でキル
pkill repair.sh CreateApplog4kBoxLog

（pkill -KILL -f netbeans）

※※ Vim ※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※
ファイル名表示
Ctrl + g
------------------------------
挿入モード、コマンドモードのときに、ヤンク（コピー）しているものを貼り付ける方法を紹介します。
 Ctrl + r　レジスタの番号0〜9(直近は0)
------------------------------
クリップボードコピー
Alt + V
------------------------------
コード補完
Ctrl + P
------------------------------
カーソルの位置を移動する直前に戻す

うっかりggしてしまい作業場所を見失ってしまった、という時や検索などによってカーソル位置を変更した時に元の位置に戻りたい、ということはよくあります。 こういった移動履歴はジャンプリストと呼ばれる場所に記録されているので1手で戻る事ができます。

元いた場所に戻る: <C-o>
元いた場所に進む: <C-i>
------------------------------
GREP検索
 vim XXX ../**/*.php
------------------------------
:vim {pattern} {file} | cw
Ctrl+wで選択ウィンドウへ戻る。
------------------------------
別タブを開いて目的箇所へジャンプするには？コマンドをパイプ(|)でつなぎましょう。
http://qiita.com/masaharu-suizu/items/e2823567c650d818a862

:tabnew | :cc grep結果の行ナンバー


------------------------------
 Mapについて
http://cocopon.me/blog/?p=3871
-----------------------------
vimのタブを切り替え
コマンドモードで下記を入力
noremap <Space> :tabn<CR>
noremap <S-Space> :tabp<CR>
noremap <Left> :tabp<CR>
noremap <Right> :tabn<CR>
-----------------------------
http://d.hatena.ne.jp/tech_onoue/20110111/1294720857
[vim]vimのタブをスペースn個分に変える方法Add Star
通常の設定だとvimでタブを押したときには、タブが入ってしまうため、スペース4つ分に変更しようと思いました。

vim を開いた状態で下記の用にタイプするといいらしいです。
:set tabstop=4
常にそのようにしたい場合には.vimrc（home以下にあります）に下記のように記述し、vimを再起動するとよいようです。
set tabstop=4
-----------------------------
Vimのキーマッピングを確認する
http://qiita.com/wakaba260/items/99ea1b8042c98fb7df93
-----------------------------
http://blog.livedoor.jp/nakamura_tech/archives/51352645.html
マッピングの削除
:unmap, :iunmap などのコマンドで削除できる。
すべてのキーマッピングを削除するには :mapclear を実行する。
-----------------------------
http://qiita.com/takasianpride/items/dd93dde04a8865608d32
:の後に入力する代表的なコマンド
-----------------------------
LINUXで画面の上部分にある見えない文章を見る方法を教えてください。
LINUXのサーバーバージョンをインストールしました。
$ ls /bin
と入力するたくさんコマンドが出てきますが画面上部に見えない部分があります。

ls /bin | more
ls /bin | less
などで見れます。
---------------------------------------------------------------------------------------
linuxコンソールで上下にスクロールする方法/

	http://orebibou.com/2015/06/linux%E3%82%B3%E3%83%B3%E3%82%BD%E3%83%BC%E3%83%AB%E3%81%A7%E4%B8%8A%E4%B8%8B%E3%81%AB%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/

そんな時は、「Shift」 + 「PageUp(Down)」でスクロールを行う事が可能だ。
今まではその方法を知らずにパイプでlessコマンドに出力を渡したりしていたのだが、ちょっとした確認ならこれで十分だな。
---------------------------------------------------------------------------------------
vimが勝手に自動改行するのを回避する方法
http://kaworu.jpn.org/kaworu/2007-07-29-1.php

---------------------------------------------------------------------------------------
文字コード変換 unixへ
vim 開いて
:set fileformat=unix

---------------------------------------------------------------------------------------
速度チェック
ls -ltr |head
ls -ltr |tail

※※ PHP ※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※
[php]ログに配列を出力するには　　

phpで配列をログに吐き出そうとするとき

$arr = array('test', '123');
error_log($arr);

と、そのまま出力すると、その出力先ファイルには

array

と出力されてしまいます。

配列をprint_rしてブラウザに映し出した時と同じように文字列にしたうえでログに出力すると、ログファイルにも綺麗に配列の中身が書き込まれます。

print_r関数の第二引数をtrueにすることで配列を文字列にして返します。

[記述例]
$arr = array('test', '123');

// 配列の中身を文字列にして返す
$arrString = print_r($arr, true);

error_log($arrString);

※※ Win ※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※
nslookup
======================================
ローカル開発環境の作成方法（Windows）
http://qiita.com/watak676/items/6d079a1753ca1e645b03

CentOSの起動方法及びシャットダウン方法
PuTTYのログアウト方法
exitとコマンドを打つ
Vagrantの一時停止方法
コマンドプロンプトで以下のコマンド
vagrant suspend
再度Vagrantを起動させる場合
CentOSのフォルダまで移動し「vagrant up」

======================================
※※ Git ※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※
コミットログにブランチ名を表示する
http://qiita.com/masarufuruya/items/7480854d4bc2f0443fc1
git log --graph --oneline --decorate=full
---------------------------------------------------------------------------------------
git config --globalのファイルの場所
http://dackdive.hateblo.jp/entry/2015/07/28/185613

リポジトリ固有の git の設定は

(リポジトリのルートディレクトリ)/.git/config
というファイルに書かれているが、

$ git config --global xxx
というように --global をつけて設定したものはどこにあるのか。

http://git-scm.com/docs/git-config によると

--global
For writing options: write to global ~/.gitconfig file rather than the repository .git/config, (略)
ということで、

~/.gitconfig
というファイルだそうです。

あとは http://stackoverflow.com/questions/2114111/where-does-git-config-global-get-written-to に書かれていたんだけど

$ git config --global --edit
とすると ~/.gitconfig をエディタで開くのでいきなり編集することができます。
======================================